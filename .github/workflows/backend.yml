name: Run RSpec and RuboCop

on:
  push:
  pull_request:

jobs:
  RSpec:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      db:
        image: mysql:8.0
        options: >-
          --character-set-server=utf8mb4
          --collation-server=utf8mb4_unicode_ci
          --default-authentication-plugin=mysql_native_password
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 4306:3306

    container:
      image: ruby:3.3.0
      options: --network=service:db --tty

    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v3

      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: back/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bundlerとgemをインストール
        working-directory: back
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Yarnをインストール
        working-directory: back
        run: yarn install --check-files

      - name: データベース設定ファイルをコピー
        working-directory: back
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test

      - name: RSpecを実行
        working-directory: back
        run: bundle exec rspec

  RuboCop:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container:
      image: ruby:3.3.0

    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v3

      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundlerとgemをインストール
        working-directory: back
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: RuboCopを実行
        working-directory: back
        run: bundle exec rubocop
