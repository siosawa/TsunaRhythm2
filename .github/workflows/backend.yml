name: Run RSpec and RuboCop

on:
  push:
    branches:
      - feature

jobs:
  RSpec:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      db:
        image: mysql:8.0
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_ROOT_HOST: "%"
        volumes:
          - db_data:/var/lib/mysql

    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: back/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bundlerとgemをインストール
        working-directory: back
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Yarnをインストール
        working-directory: back
        run: yarn install --check-files

      - name: データベース設定ファイルをコピー
        working-directory: back
        run: cp config/database.yml.ci config/database.yml

      - name: Wait for MySQL
        run: sleep 30

      - name: デバッグ情報を表示
        run: |
          echo "MySQLのデータベースを表示します"
          mysql -h localhost -u root -ppassword -e 'SHOW DATABASES;'
          echo "MySQLのユーザーを表示します"
          mysql -h localhost -u root -ppassword -e 'SELECT User, Host FROM mysql.user;'
          echo "MySQLの接続情報を表示します"
          mysqladmin -h localhost -u root -ppassword version

      - name: データベースを作成およびマイグレーション
        working-directory: back
        run: |
          bundle exec rake db:create RAILS_ENV=test --trace
          bundle exec rake db:migrate RAILS_ENV=test --trace

      - name: RSpecを実行
        working-directory: back
        run: bundle exec rspec
        env:
          RAILS_ENV: test

  RuboCop:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0

      - name: Bundlerとgemをインストール
        working-directory: back
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: RuboCopを実行
        working-directory: back
        run: bundle exec rubocop
